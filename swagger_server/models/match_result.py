# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class MatchResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, result: bool=None):  # noqa: E501
        """MatchResult - a model defined in Swagger

        :param result: The result of this MatchResult.  # noqa: E501
        :type result: bool
        """
        self.swagger_types = {
            'result': bool
        }

        self.attribute_map = {
            'result': 'result'
        }

        self._result = result

    @classmethod
    def from_dict(cls, dikt) -> 'MatchResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MatchResult of this MatchResult.  # noqa: E501
        :rtype: MatchResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def result(self) -> bool:
        """Gets the result of this MatchResult.

        Is the face matching the card face  # noqa: E501

        :return: The result of this MatchResult.
        :rtype: bool
        """
        return self._result

    @result.setter
    def result(self, result: bool):
        """Sets the result of this MatchResult.

        Is the face matching the card face  # noqa: E501

        :param result: The result of this MatchResult.
        :type result: bool
        """
        if result is None:
            raise ValueError("Invalid value for `result`, must not be `None`")  # noqa: E501

        self._result = result
